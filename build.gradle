// Springboot plugin builds a single jar from code and all deps

buildscript {
  repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://repo.spring.io/libs-release" }
  }
  dependencies {
    classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.10.RELEASE'
    classpath 'gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.19.2'
    classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.6'
  }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.palantir.docker'
apply plugin: 'com.github.jacobono.jaxb'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'http://nexus.k-int.com/content/repositories/releases' }
    maven { url "https://repo.spring.io/libs-release" }
}

dependencies {

  jaxb 'org.glassfish.jaxb:jaxb-xjc:2.2.11'
  jaxb 'org.glassfish.jaxb:jaxb-runtime:2.2.11'

  compile group: 'log4j', name: 'log4j', version: '1.2.5'
  compile group: 'org.codehaus.groovy', name:'groovy-all', version:'2.4.10'
  compile group: 'org.codehaus.groovy.modules.http-builder', name: 'http-builder', version: '0.7.1'

  testCompile 'junit:junit:4.12'
  testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
  testCompile 'org.springframework.boot:spring-boot-starter-test:2.1.4.RELEASE'
  testCompile 'org.springframework.boot:spring-boot-starter-undertow:2.1.5.RELEASE'
}

jaxb {
  xjc {
    xsdDir = "src/main/resources/schema"
    destinationDir = "src/generated/java"
    generatePackage = "org.olf.ncip.schema" 
  }
}

group = 'org.olf'
sourceCompatibility = 1.8
version = '1.0.1'

// See https://docs.gradle.org/current/userguide/maven_plugin.html#uploading_to_maven_repositories
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "http://nexus.k-int.com/content/repositories/releases/") {
                def usr = project.hasProperty('knowintNexusUser') ? knowintNexusUser :''
                def pass = project.hasProperty('knowintNexusPass') ? knowintNexusPass :''
                authentication(userName: usr, password: pass)
            }
        }
    }
}


/**
 * https://guides.gradle.org/testing-gradle-plugins/
 */
sourceSets {

    main {
        java {
            srcDir 'src/generated/java'
        }
    }

    integrationTest {
        groovy.srcDir file('src/integration-test/groovy')
        resources.srcDir file('src/integration-test/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test
}


check.dependsOn integrationTest
